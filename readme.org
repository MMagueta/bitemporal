* Bitemporal

** MVP

*** DONE save for simple tables (no FK)

*** DONE remove for simple tables (no FK)

*** DONE foreign keys

*** DONE system-time stuff

*** TODO code generator
**** TODO bitemporal.diagnostics
**** TODO bitemporal.ignore_tables(regclass): exclude this tables from code generation
**** TODO system-time procedures
**** TODO system-time triggers
**** TODO valid-time triggers
**** TODO valid-time procedures

** Current limitations
only works for base-tables (no views, or temporary tables).
does not support range domain types.

** Future Ideas/Research needed
*** TODO privileges?
How should privileges be handled by the generator and/or generated code?

*** TODO support range domain types
*** TODO custom range types?
*** TODO partitioned tables
*** TODO improve history relations comparison
There is a lot of room for improvement on checking for differences between the main and history relations.

** Points of Interest (POI)

this type of constraint: ~exclude using gist(s_id with =, id with =, state with =, valid_period with -|-)~

https://www.postgresql.org/docs/current/rangetypes.html

https://www.postgresql.org/docs/current/sql-createfunction.html
- leakproof
- parallel, on non integer ranges it seems we can do parallel functions
